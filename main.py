import sqlite3
from datetime import date

conn = sqlite3.connect('library.db')
cursor = conn.cursor()

# üìå –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü
def create_tables():
    """
    –°–æ–∑–¥–∞–π —Ç—Ä–∏ —Ç–∞–±–ª–∏—Ü—ã: Books, Users, Borrowings.
    –ò—Å–ø–æ–ª—å–∑—É–π CREATE TABLE IF NOT EXISTS –∏ —É–∫–∞–∂–∏ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö.
    –ù–µ –∑–∞–±—É–¥—å –∑–∞–¥–∞—Ç—å –ø–µ—Ä–≤–∏—á–Ω—ã–µ –∫–ª—é—á–∏ –∏ —Å–≤—è–∑–∏ (FOREIGN KEY).
    """
    cursor.execute('''CREATE TABLE IF NOT EXISTS Books (
                      id INTEGER PRIMARY KEY,
                      title TEXT NOT NULL,
                      author TEXT NOT NULL,
                      year INTEGER,
                      available BOOLEAN DEFAULT TRUE)''')
    
    cursor.execute('''CREATE TABLE IF NOT EXISTS Users (
                      id INTEGER PRIMARY KEY,
                      name TEXT NOT NULL,
                      email TEXT UNIQUE NOT NULL)''')
    
    cursor.execute('''CREATE TABLE IF NOT EXISTS Borrowings (
                      id INTEGER PRIMARY KEY,
                      user_id INTEGER NOT NULL,
                      book_id INTEGER NOT NULL,
                      borrow_date DATE NOT NULL,
                      FOREIGN KEY (user_id) REFERENCES Users(id),
                      FOREIGN KEY (book_id) REFERENCES Books(id))''')
    conn.commit()

# üìå –§—É–Ω–∫—Ü–∏—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–∑—ã –Ω–∞—á–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
def seed_data():
    """
    –í—Å—Ç–∞–≤—å –≤ —Ç–∞–±–ª–∏—Ü—ã Books –∏ Users –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫ —Å –Ω–∞—á–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏.
    –ò—Å–ø–æ–ª—å–∑—É–π executemany() –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã (?).
    """
    books_data = [
        ('–í–æ–π–Ω–∞ –∏ –º–∏—Ä', '–õ–µ–≤ –¢–æ–ª—Å—Ç–æ–π', 1869, True),
        ('–ü—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–µ –∏ –Ω–∞–∫–∞–∑–∞–Ω–∏–µ', '–§–µ–¥–æ—Ä –î–æ—Å—Ç–æ–µ–≤—Å–∫–∏–π', 1866, True),
        ('1984', '–î–∂–æ—Ä–¥–∂ –û—Ä—É—ç–ª–ª', 1949, True),
        ('–ú–∞—Å—Ç–µ—Ä –∏ –ú–∞—Ä–≥–∞—Ä–∏—Ç–∞', '–ú–∏—Ö–∞–∏–ª –ë—É–ª–≥–∞–∫–æ–≤', 1967, True),
        ('–ì–∞—Ä—Ä–∏ –ü–æ—Ç—Ç–µ—Ä –∏ —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–∏–π –∫–∞–º–µ–Ω—å', '–î–∂–æ–∞–Ω –†–æ—É–ª–∏–Ω–≥', 1997, True)
    ]
    
    users_data = [
        ('–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤', 'ivan@example.com'),
        ('–ü–µ—Ç—Ä –ü–µ—Ç—Ä–æ–≤', 'petr@example.com'),
        ('–°–µ—Ä–≥–µ–π –°–µ—Ä–≥–µ–µ–≤', 'sergey@example.com')
    ]
    
    cursor.executemany('INSERT INTO Books (title, author, year, available) VALUES (?, ?, ?, ?)', books_data)
    cursor.executemany('INSERT INTO Users (name, email) VALUES (?, ?)', users_data)
    conn.commit()
    print("‚úÖ –ù–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã")

# üìå –§—É–Ω–∫—Ü–∏—è –≤—ã–¥–∞—á–∏ –∫–Ω–∏–≥–∏
def borrow_book(user_id, book_id):
    """
    –ü—Ä–æ–≤–µ—Ä—å, –¥–æ—Å—Ç—É–ø–Ω–∞ –ª–∏ –∫–Ω–∏–≥–∞.
    –ï—Å–ª–∏ –¥–∞ ‚Äî –≤—ã–¥–∞–π –µ—ë (–æ–±–Ω–æ–≤–∏ –ø–æ–ª–µ available –≤ Books –∏ —Å–æ–∑–¥–∞–π –∑–∞–ø–∏—Å—å –≤ Borrowings).
    –û–±—Ä–∞–±–æ—Ç–∞–π –≤–æ–∑–º–æ–∂–Ω—ã–µ –æ—à–∏–±–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∫–Ω–∏–≥–∞ —É–∂–µ –≤—ã–¥–∞–Ω–∞).
    """
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        cursor.execute('SELECT id FROM Users WHERE id = ?', (user_id,))
        if not cursor.fetchone():
            print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∫–Ω–∏–≥–∏
        cursor.execute('SELECT available FROM Books WHERE id = ?', (book_id,))
        book = cursor.fetchone()
        
        if not book:
            print(f"‚ùå –ö–Ω–∏–≥–∞ —Å ID {book_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return
            
        if not book[0]:
            print(f"‚ùå –ö–Ω–∏–≥–∞ —Å ID {book_id} —É–∂–µ –≤—ã–¥–∞–Ω–∞")
            return
            
        # –í—ã–¥–∞–µ–º –∫–Ω–∏–≥—É
        cursor.execute('UPDATE Books SET available = FALSE WHERE id = ?', (book_id,))
        cursor.execute('INSERT INTO Borrowings (user_id, book_id, borrow_date) VALUES (?, ?, ?)', 
                      (user_id, book_id, date.today()))
        conn.commit()
        print(f"‚úÖ –ö–Ω–∏–≥–∞ —Å ID {book_id} —É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å ID {user_id}")
    except sqlite3.Error as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–¥–∞—á–µ –∫–Ω–∏–≥–∏: {e}")

# üìå –§—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫–Ω–∏–≥–∏
def return_book(book_id):
    """
    –û—Ç–º–µ—Ç—å –∫–Ω–∏–≥—É –∫–∞–∫ –¥–æ—Å—Ç—É–ø–Ω—É—é.
    –ü—Ä–æ–≤–µ—Ä—å, —á—Ç–æ –æ–Ω–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –±—ã–ª–∞ –≤—ã–¥–∞–Ω–∞.
    """
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—ã–¥–∞–Ω–∞ –ª–∏ –∫–Ω–∏–≥–∞
        cursor.execute('SELECT available FROM Books WHERE id = ?', (book_id,))
        book = cursor.fetchone()
        
        if not book:
            print(f"‚ùå –ö–Ω–∏–≥–∞ —Å ID {book_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return
            
        if book[0]:
            print(f"‚ùå –ö–Ω–∏–≥–∞ —Å ID {book_id} —É–∂–µ –¥–æ—Å—Ç—É–ø–Ω–∞ (–Ω–µ –±—ã–ª–∞ –≤—ã–¥–∞–Ω–∞)")
            return
            
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–Ω–∏–≥—É
        cursor.execute('UPDATE Books SET available = TRUE WHERE id = ?', (book_id,))
        cursor.execute('DELETE FROM Borrowings WHERE book_id = ?', (book_id,))
        conn.commit()
        print(f"‚úÖ –ö–Ω–∏–≥–∞ —Å ID {book_id} —É—Å–ø–µ—à–Ω–æ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∞")
    except sqlite3.Error as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ –∫–Ω–∏–≥–∏: {e}")

# üìå –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—Å–µ—Ö –∫–Ω–∏–≥
def show_books():
    """
    –í—ã–≤–µ–¥–∏ —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–Ω–∏–≥ —Å –∏—Ö —Å—Ç–∞—Ç—É—Å–æ–º: '–î–æ—Å—Ç—É–ø–Ω–∞' –∏–ª–∏ '–í—ã–¥–∞–Ω–∞'.
    """
    try:
        cursor.execute('''SELECT id, title, author, year, 
                         CASE WHEN available THEN '–î–æ—Å—Ç—É–ø–Ω–∞' ELSE '–í—ã–¥–∞–Ω–∞' END as status 
                         FROM Books''')
        books = cursor.fetchall()
        
        if not books:
            print("‚ùå –í –±–∏–±–ª–∏–æ—Ç–µ–∫–µ –Ω–µ—Ç –∫–Ω–∏–≥")
            return
            
        print("\nüìö –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–Ω–∏–≥:")
        print("{:<5} {:<40} {:<25} {:<8} {:<10}".format(
            "ID", "–ù–∞–∑–≤–∞–Ω–∏–µ", "–ê–≤—Ç–æ—Ä", "–ì–æ–¥", "–°—Ç–∞—Ç—É—Å"))
        print("-" * 90)
        for book in books:
            print("{:<5} {:<40} {:<25} {:<8} {:<10}".format(*book))
    except sqlite3.Error as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –∫–Ω–∏–≥: {e}")

# üìå –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ –∫–Ω–∏–≥, –≤—ã–¥–∞–Ω–Ω—ã—Ö –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
def show_user_books(user_id):
    """
    –í—ã–≤–µ–¥–∏ —Å–ø–∏—Å–æ–∫ –∫–Ω–∏–≥, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞ —Ä—É–∫–∞—Ö —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    –ò—Å–ø–æ–ª—å–∑—É–π JOIN –º–µ–∂–¥—É Borrowings –∏ Books.
    """
    try:
        cursor.execute('''SELECT b.id, b.title, b.author, br.borrow_date 
                         FROM Books b
                         JOIN Borrowings br ON b.id = br.book_id
                         WHERE br.user_id = ?''', (user_id,))
        books = cursor.fetchall()
        
        if not books:
            print(f"‚ùå –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID {user_id} –Ω–µ—Ç –≤—ã–¥–∞–Ω–Ω—ã—Ö –∫–Ω–∏–≥")
            return
            
        print(f"\nüìö –ö–Ω–∏–≥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID {user_id}:")
        print("{:<5} {:<40} {:<25} {:<12}".format(
            "ID", "–ù–∞–∑–≤–∞–Ω–∏–µ", "–ê–≤—Ç–æ—Ä", "–î–∞—Ç–∞ –≤—ã–¥–∞—á–∏"))
        print("-" * 85)
        for book in books:
            print("{:<5} {:<40} {:<25} {:<12}".format(*book))
    except sqlite3.Error as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –∫–Ω–∏–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")

# üìå –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –∫–Ω–∏–≥ –ø–æ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É
def search_books(keyword):
    """
    –ù–∞–π–¥–∏ –∫–Ω–∏–≥–∏ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∏–ª–∏ –∞–≤—Ç–æ—Ä—É.
    –ò—Å–ø–æ–ª—å–∑—É–π LIKE –∏ –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫—É (%–∫–ª—é—á–µ–≤–æ–µ_—Å–ª–æ–≤–æ%).
    """
    try:
        search_pattern = f"%{keyword}%"
        cursor.execute('''SELECT id, title, author, year, 
                         CASE WHEN available THEN '–î–æ—Å—Ç—É–ø–Ω–∞' ELSE '–í—ã–¥–∞–Ω–∞' END as status 
                         FROM Books 
                         WHERE title LIKE ? OR author LIKE ?''', 
                      (search_pattern, search_pattern))
        books = cursor.fetchall()
        
        if not books:
            print(f"‚ùå –ö–Ω–∏–≥–∏ –ø–æ –∑–∞–ø—Ä–æ—Å—É '{keyword}' –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            return
            
        print(f"\nüîç –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ –ø–æ –∑–∞–ø—Ä–æ—Å—É '{keyword}':")
        print("{:<5} {:<40} {:<25} {:<8} {:<10}".format(
            "ID", "–ù–∞–∑–≤–∞–Ω–∏–µ", "–ê–≤—Ç–æ—Ä", "–ì–æ–¥", "–°—Ç–∞—Ç—É—Å"))
        print("-" * 90)
        for book in books:
            print("{:<5} {:<40} {:<25} {:<8} {:<10}".format(*book))
    except sqlite3.Error as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∫–Ω–∏–≥: {e}")

# üìå –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def add_user(name, email):
    """
    –í—Å—Ç–∞–≤—å –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–∞–±–ª–∏—Ü—É Users.
    –û–±—Ä–∞–±–æ—Ç–∞–π –∏—Å–∫–ª—é—á–µ–Ω–∏–µ, –µ—Å–ª–∏ email —É–∂–µ –µ—Å—Ç—å –≤ –±–∞–∑–µ.
    """
    try:
        cursor.execute('INSERT INTO Users (name, email) VALUES (?, ?)', (name, email))
        conn.commit()
        print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {name} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω")
    except sqlite3.IntegrityError:
        print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å email {email} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    except sqlite3.Error as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")

# üß≠ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
def main_menu():
    """
    –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —á–µ—Ä–µ–∑ –∫–æ–Ω—Å–æ–ª—å–Ω–æ–µ –º–µ–Ω—é.
    """
    while True:
        print("\nüìö –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:")
        print("1. –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∫–Ω–∏–≥–∏")
        print("2. –í—ã–¥–∞—Ç—å –∫–Ω–∏–≥—É")
        print("3. –í–µ—Ä–Ω—É—Ç—å –∫–Ω–∏–≥—É")
        print("4. –ü–æ–∫–∞–∑–∞—Ç—å –∫–Ω–∏–≥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        print("5. –ü–æ–∏—Å–∫ –∫–Ω–∏–≥–∏")
        print("6. –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        print("7. –í—ã—Ö–æ–¥")

        choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ")

        if choice == '1':
            show_books()
        elif choice == '2':
            try:
                user_id = int(input("ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: "))
                book_id = int(input("ID –∫–Ω–∏–≥–∏: "))
                borrow_book(user_id, book_id)
            except ValueError:
                print("‚ùå –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ —á–∏—Å–ª–∞.")
        elif choice == '3':
            try:
                book_id = int(input("ID –∫–Ω–∏–≥–∏ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞: "))
                return_book(book_id)
            except ValueError:
                print("‚ùå –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID.")
        elif choice == '4':
            try:
                user_id = int(input("ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: "))
                show_user_books(user_id)
            except ValueError:
                print("‚ùå –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID.")
        elif choice == '5':
            keyword = input("–í–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ –¥–ª—è –ø–æ–∏—Å–∫–∞: ")
            search_books(keyword)
        elif choice == '6':
            name = input("–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ")
            email = input("Email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ")
            add_user(name, email)
        elif choice == '7':
            print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            break
        else:
            print("‚ö†Ô∏è –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")

# ‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
if __name__ == '__main__':
    create_tables()
    # seed_data()  # –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π –æ–¥–∏–Ω —Ä–∞–∑ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –Ω–∞—á–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    main_menu()
    conn.close()